def dist(point):
    return point[0] ** 2 + point[1] ** 2


n = int(input())
points = []
for i in range(n):
    point = tuple(map(int, input().split()))
    points.append(point)
print(' '.join(map(str, points)))
points.sort(key=dist)
for point in points:
    print(' '.join(map(str, point)))

# В качестве еще одного примера рассмотрим задачу о сортировке точек на плоскости,
# заданных парой целых координат x и y по неубыванию расстояния от начала координат.
# В данном случае в качестве функции для генерации ключа, по которому будут сравниваться
# элементы, мы напишем свою функцию, которая будет возвращать квадрат расстояния от точки
# до начала координат. Квадрат расстояния мы используем для того, чтобы оставаться в целых
# числах и избавится от необходимости считать квадратный корень (медленно и неточно):
