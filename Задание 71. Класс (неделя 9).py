class Matrix:
    def __init__(self, list):
        self.lines = []
        self.n = len(list)
        self.k = len(list[1])
        for i in range(len(list)):
            self.lines.append(list[i])

    def __str__(self):
        newlines = ''
        for i in range(len(self.lines)):
            # newlines = ''
            for j in range(len(self.lines[i])):
                newlines += str(self.lines[i][j]) + '\t'
            newlines = newlines.rstrip()
            newlines += '\n'
        newlines = newlines.rstrip()
        return newlines

    def size(self):
        return (self.n, self.k)


a = Matrix([[1, 0, 0], [1, 1, 1], [0, 0, 0], [1, 1, 1]])
print(str(a))
print(a.size())

# Реализуйте класс Matrix. Он должен содержать:
#
# Конструктор от списка списков. Гарантируется, что списки состоят из чисел, не пусты и все имеют
# одинаковый размер. Конструктор должен копировать содержимое списка списков, т. е. при изменении
# списков, от которых была сконструирована матрица, содержимое матрицы изменяться не должно.
# Метод __str__, переводящий матрицу в строку. При этом элементы внутри одной строки должны быть
# разделены знаками табуляции, а строки — переносами строк. После каждой строки не должно быть
# символа табуляции и в конце не должно быть переноса строки.
# Метод size без аргументов, возвращающий кортеж вида (число строк, число столбцов).
# Пример теста с участием этого метода есть в следующей задаче этой недели.
